#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;
	iaddq $-6, %rdx
	jge Loop6			# if so, goto Loop:
	iaddq $5, %rdx
	jl Done
Loop1:
    mrmovq (%rdi), %r10	# read val from src...
    rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos:
    iaddq $8, %rdi
    iaddq $8, %rsi
Check1:
    iaddq $-1, %rdx
    jge Loop1
    ret
Loop6:
    mrmovq (%rdi), %r10	# read val from src...
    rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos1		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos1:
	mrmovq 8(%rdi), %r10	# read val from src...
    rmmovq %r10, -8(%rsi)	# ...and store it to dst
    andq %r10, %r10
    jle Npos2		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos2:
    mrmovq 16(%rdi), %r10	# read val from src...
    rmmovq %r10, 16(%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos3		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos3:
    mrmovq 24(%rdi), %r10	# read val from src...
    rmmovq %r10, 24(%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos4		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos4:
    mrmovq 32(%rdi), %r10	# read val from src...
    rmmovq %r10, 32(%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos5		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos5:
    mrmovq 40(%rdi), %r10	# read val from src...
    rmmovq %r10, 40(%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos6		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos6:
	iaddq $48, %rdi		# src++
	iaddq $48, %rsi		# dst++
Check6:
    iaddq $-6, %rdx
	jge Loop6			# if so, goto Loop:
	iaddq $5, %rdx
	jge Loop1
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
